import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

apply plugin: 'maven'
apply plugin: 'java'

//version = "1.0.1"
distsDirName="dist"
libsDirName="."
archivesBaseName="0057-MasterRDFStore"
sourceCompatibility=1.8
targetCompatibility=1.8


configurations {
    compile
    releaseJars
}

dependencies {
    compile(ivyDependencies('compile'))
    compile project(':client:RDFMasterStoreClient')
    compile project(':client:RDFStoreClient')
    compile project(':client:ServiceBrokerClient')
    compile project(':client:CoadunationTypeManager')
    compile project(':client:MessageServiceClient')
    compile project(':libs:CoadunationAnnotations')
    compile project(':libs:CoadunationLib')
    compile project(':libs:CoadunationUtil')
    compile project(':rdf:CoadunationSemantics')
    compile project(':rdf:Semantics')
    compile project(':rdf:SchemaUtils')
    compile group:"org.apache.jena", name:"jena-arq", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-core", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-sdb", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-tdb", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-iri", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-base", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-shaded-guava", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-fuseki-embedded", version:"3.4.0"
    compile group:"org.apache.jena", name:"jena-fuseki-core", version:"3.4.0"
    compile group:"org.apache.thrift", name:"libthrift", version:"0.9.3"
    compile 'org.apache.jena:jena-rdfconnection:3.4.0'
    compile 'com.github.andrewoma.dexx:collection:0.7'
    releaseJars(ivyDependencies('compile'))
    releaseJars project(':client:RDFMasterStoreClient')
    releaseJars project(':client:RDFStoreClient')
    releaseJars project(':client:ServiceBrokerClient')
    releaseJars project(':client:CoadunationTypeManager')
    releaseJars project(':client:MessageServiceClient')
    releaseJars project(':rdf:CoadunationSemantics')
    releaseJars project(':libs:CoadunationUtil')
    releaseJars project(':rdf:Semantics')
    releaseJars project(':rdf:SchemaUtils')
    releaseJars group:"org.apache.jena", name:"jena-fuseki-embedded", version:"3.4.0"
    releaseJars group:"org.apache.jena", name:"jena-fuseki-embedded", version:"3.4.0"
    releaseJars group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    releaseJars group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
    releaseJars group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.3.14.v20161028'
    releaseJars group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.3.14.v20161028'
    releaseJars group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    releaseJars group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.6'
    releaseJars group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.5.3'
    releaseJars 'org.apache.commons:commons-csv:1.4'

    releaseJars group: 'commons-codec', name: 'commons-codec', version: '1.9'
    releaseJars group: 'commons-logging', name: 'commons-logging', version: '1.2'





}

sourceSets {
    main {
        java {
            srcDir './src'
        }
        resources {
            srcDir './src'
        }
    }
}


task createDir << {
    ant.mkdir(dir: 'build/classes/main')
}

task copyToJars(type: Copy) {
    into "build/classes/main"
    from configurations.releaseJars {
         exclude '**/log4j*'
         exclude '**/axis*'
         exclude '**/jotm*'
         exclude '**/jta*'
         exclude '**/carol*'
         exclude '**/wsdl4j*'
         exclude '**/*CoadunationLib*'
         exclude '**/*CoadunationAnnotations*'
         exclude '**/*CoadunationCommon*'
         exclude '**/*CoadunationClient*'
         exclude '**/*CoadunationSecurity*'
         exclude '**/*CoadunationBase*'
         exclude '**/*jacorb*'
         exclude '**/*axis*'
         exclude '**/*carol*'
         exclude '**/*jotm*'
         exclude '**/*wsdl*'
         exclude '**/*slf4j*'
         exclude '**/*jta*'
         exclude '**/*avalon*'
         exclude '**/*commons-loggin*'
         exclude '**/*log4j*'
    }
}

jar {
    manifest {
        attributes   "Implementation-Version" : version
    }
}

processResources.dependsOn {
    [createDir,copyToJars]
}

task copyJars << {
    ant.mkdir(dir: '../../sbin')
    ant.copy(todir: '../../sbin/', file: "build/" + archivesBaseName + "-" + version + ".jar") 
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "file://localhost/$projectDir/../../repository")
        pom.version = version
        pom.artifactId = archivesBaseName
        pom.groupId = archivesBaseName
    }

}

build.dependsOn {
    [jar, uploadArchives, copyJars]
}
release.dependsOn build

def ivyDependencies(conf) {
        def dep = []

        def ivyModule = new XmlParser().parse(file("${projectDir}/ivy.xml"))

        ivyModule.dependencies.dependency.each {
                if(it.@conf == null || it.@conf == conf)
                        dep.add(it.@org + ':' + it.@name + ':' + it.@rev + ':@jar')
        }

        return dep
}

