/*
 * test: Description
 * Copyright (C) Thu Apr 19 20:12:37 SAST 2012 owner
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * bob.lwf
 * @author admin
 */


/**
 * This is the template for a flow
 */
@java("out")
@rdf("http://dipforge.sourceforge.net/test1#type1" "type1")
@store("store")
@service("test" "test" "test.TestClass" "test")
flow bob {
   def out
   def type1
   def test
   {
       out.println("before : ##################################################")
       out.println("hello world example 1 : " + type1.getProperty1())
       out.println("hello world example 2 : " + type1.property2)
       type1.setProperty1("man on moon")
       type1.property2 = "bob is bill"
       out.println("hello world example 3 : " + type1.getProperty1())
       out.println("hello world example 4 : " + type1.property2)
       out.println("after : ##################################################")
       store.persist(type1)
       test.callTest1("hello world")
   }
}
