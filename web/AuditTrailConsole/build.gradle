import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

apply plugin: 'maven'
apply plugin: 'war'

//version = "1.0.1"
distsDirName="dist"
libsDirName="."
archivesBaseName="AuditTrailConsole"
sourceCompatibility=1.8
targetCompatibility=1.8

configurations {
    compile
    gwt
}

dependencies {
    compile(ivyDependencies('compile'))
    compile project(':libs:CoadunationAnnotations')
    compile project(':client:AuditTrail')
    compile project(':rdf:Semantics')
    compile project(':web:lib:CoadunationGWTLibrary')
    compile project(':web:lib:AuditTrailGWT')
    compile project(':web:lib:WebLibs')
    compile project(':utils:CoadunationUtil')
    gwt group: 'com.google.gwt', name: 'gwt-user', version: '2.1.1'
    gwt group: 'com.google.gwt', name: 'gwt-dev', version: '2.1.1'
    gwt group: 'com.smartgwt', name: 'smartgwt', version: '2.4'
    gwt group: 'com.smartgwt', name: 'smartgwt-skins', version: '2.4'
    gwt project(':web:lib:CoadunationGWTLibrary')
    gwt project(':web:lib:AuditTrailGWT')
}

sourceSets {
    main {
        java {
            srcDir './src/java'
        }
        resources {
            srcDir './src/java'
            srcDir './src/conf'
        }
    }
}

project.ext.gwtBuildDir = "$projectDir/build/js"
project.ext.gwtOutDir = "$projectDir/build/out"
project.ext.gwtGenDir = "$projectDir/build/gen"

task gwtCompile << {
  def created = (new File(project.ext.gwtBuildDir)).mkdirs()
  created = (new File(project.ext.gwtGenDir)).mkdirs()
  created = (new File(project.ext.gwtOutDir)).mkdirs()
  ant.java(classname:'com.google.gwt.dev.Compiler',
              failOnError: 'true',
              fork: 'false') {
    jvmarg(value: '-Xmx184M')
    arg(line: '-war ' + project.ext.gwtOutDir)
    arg(line: '-logLevel INFO')
    arg(line: '-style PRETTY')
//    arg(line: '-treeLogger')
    arg(value: 'com.rift.coad.audit.gwt.console.Main')
    classpath {
      pathElement(location: './src/java')
      pathElement(path: configurations.gwt.asPath)
    }
  }
}

war.dependsOn gwtCompile

war {
    def classPath = getClasspath().filter({file -> file.name.contains("classes") ||
        file.name.contains("gwt-servlet") ||
        file.name.contains("smartgwt") ||
        file.name.contains("CoadunationUtil") ||
        file.name.contains("AuditTrail") ||
        file.name.contains("Semantics") || 
        file.name.contains("WebLibs")}) 
    setClasspath(classPath)
    classpath 'build/classes/java/main/'
    from 'web'
    from project.ext.gwtOutDir
}

artifacts {
    runtime war
}

release.dependsOn build

def ivyDependencies(conf) {
        def dep = []

        def ivyModule = new XmlParser().parse(file("${projectDir}/ivy.xml"))

        ivyModule.dependencies.dependency.each {
                if(it.@conf == null || it.@conf == conf)
                        dep.add(it.@org + ':' + it.@name + ':' + it.@rev + ':@jar')
        }

        return dep
}
